{"version":3,"sources":["core/game.ts"],"names":[],"mappings":"AAAA,gCAAgC;AAChC,0BAA0B;AAC1B,8BAA8B;AAC9B,sCAAsC;AACtC;;;;;;gGAMgG;AAEhG,qCAAqC;AAErC,iBAAiB;AAEjB,kBAAkB;AAClB,IAAO,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,IAAO,QAAQ,GAAG,KAAK,CAAC,aAAa,CAAC;AACtC,IAAO,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;AACnD,IAAO,WAAW,GAAG,KAAK,CAAC,WAAW,CAAC;AACvC,IAAO,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AACzC,IAAO,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;AAC3C,IAAO,cAAc,GAAG,KAAK,CAAC,cAAc,CAAC;AAC7C,IAAO,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AACjC,IAAO,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACrC,IAAO,eAAe,GAAG,KAAK,CAAC,mBAAmB,CAAC;AACnD,IAAO,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;AACnD,IAAO,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AACjC,IAAO,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AACzB,IAAO,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AACjC,IAAO,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACnC,IAAO,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACrC,IAAO,eAAe,GAAG,KAAK,CAAC,eAAe,CAAC;AAC/C,IAAO,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AACzC,IAAO,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC;AACjC,IAAO,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC;AACrB,IAAO,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,IAAO,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;AAC/B,IAAO,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,IAAO,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;AAC7B,IAAO,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC;AAC/B,IAAO,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;AAC3B,IAAO,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC;AAEvD,qBAAqB;AACrB,IAAO,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;AAEvC,oEAAoE;AACpE,IAAI,IAAI,GAAG,CAAC;IAER,IAAI,KAAK,GAAU,IAAI,KAAK,EAAE,CAAC;IAC/B,IAAI,QAAkB,CAAC;IACvB,IAAI,MAAyB,CAAC;IAC9B,IAAI,IAAgB,CAAC;IACrB,IAAI,KAAW,CAAC;IAChB,IAAI,aAAa,CAAC,CAAC,sBAAsB;IACzC,IAAI,UAAU,CAAC;IAEf,IAAI,GAAS,CAAC;IACd,IAAI,KAAU,CAAC;IACf,IAAI,IAAS,CAAC;IACd,IAAI,IAAS,CAAC;IACd,IAAI,KAAU,CAAC;IAEf,IAAI,WAA2B,CAAC;IAChC,IAAI,WAA4B,CAAC;IAEjC,IAAI,aAA6B,CAAC;IAClC,IAAI,aAA8B,CAAC;IAEnC,IAAI,YAA4B,CAAC;IACjC,IAAI,YAA6B,CAAC;IAElC,IAAI,YAA4B,CAAC;IACjC,IAAI,YAA6B,CAAC;IAElC,IAAI,aAA6B,CAAC;IAClC,IAAI,aAA8B,CAAC;IAEnC,IAAI,YAAY,CAAC;IACjB,IAAI,YAA0B,CAAC;IAC/B,IAAI,SAAoB,CAAC;IACzB,IAAI,SAA0B,CAAC;IAC/B,IAAI,YAAqB,CAAC;IAC1B,IAAI,GAAQ,CAAC;IACb,IAAI,KAAY,CAAC;IACjB,IAAI,IAAI,GAAW,CAAC,CAAC;IACrB,IAAI,KAAY,CAAC;IACjB,IAAI,mBAAmB,CAAA;IACvB,IAAI,aAAa,CAAC;IAClB,IAAI,eAAe,CAAC;IACpB,IAAI,cAAc,CAAC;IACnB,IAAI,cAAc,CAAC;IACnB,IAAI,eAAe,CAAC;IACpB,IAAI,aAAa,CAAC;IAClB,IAAI,gBAAgB,CAAC;IAErB;QACI,iCAAiC;QACjC,sBAAsB;QAEtB,gCAAgC;QAChC,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACpB,aAAa,EAAE,CAAC,CAAC,6BAA6B;QAC9C,WAAW,EAAE,CAAC,CAAC,mBAAmB;QAElC,0BAA0B;QAC1B,+GAA+G;QAC/G,oCAAoC;QACpC,wBAAwB;QACxB,mBAAmB;QACnB,mDAAmD;QAEnD,yBAAyB;QACzB,WAAW,GAAG,IAAI,cAAc,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC5C,WAAW,GAAG,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC,CAAC;QACxE,GAAG,GAAE,IAAI,UAAU,CAAC,WAAW,EAAE,WAAW,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACvD,GAAG,CAAC,IAAI,GAAG,KAAK,CAAC;QACjB,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACf,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAEhD,2BAA2B;QAC3B,aAAa,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAChD,aAAa,GAAG,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC,CAAC;QAC1E,KAAK,GAAE,IAAI,UAAU,CAAC,aAAa,EAAE,aAAa,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9D,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;QACrB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAElD,0BAA0B;QAC1B,YAAY,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC/C,YAAY,GAAG,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC,CAAC;QACzE,IAAI,GAAE,IAAI,UAAU,CAAC,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,0BAA0B;QAC1B,YAAY,GAAG,IAAI,cAAc,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAC/C,YAAY,GAAG,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC,CAAC;QACzE,IAAI,GAAE,IAAI,UAAU,CAAC,YAAY,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;QAEjD,2BAA2B;QAC3B,aAAa,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QACjD,aAAa,GAAG,IAAI,eAAe,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,SAAS,EAAC,KAAK,EAAE,CAAC,CAAC;QAC1E,KAAK,GAAE,IAAI,UAAU,CAAC,aAAa,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7D,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;QACpB,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAElD,8BAA8B;QAC9B;;;;;;;;wCAQgC;QAGhC,kCAAkC;QAClC,IAAI,GAAG,IAAI,UAAU,CAAC,CAAC,CAAC,CAAC;QACzB,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAChB,gBAAgB;QAChB,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;QAE7C,yBAAyB;QACzB,IAAI,UAAU,GAAG,SAAS,CAAC,CAAC,iBAAiB;QAC7C,aAAa,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACjD,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC1C,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9B,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9B,aAAa,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,CAAC;QAC9B,aAAa,CAAC,QAAQ,GAAG,GAAG,CAAC;QAC7B,KAAK,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEjC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAsDE;QACM,mCAAmC;QACnC,YAAY,GAAG,SAAS,CAAA;QACxB,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,CAAC;QAC9C,KAAK,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxB,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;QAE/C,4BAA4B;QAC5B,IAAI,UAAU,GAAG,SAAS,CAAC;QAC3B,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;QAChD,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACnC,SAAS,CAAC,UAAU,GAAG,KAAK,CAAC;QAC7B,SAAS,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC/B,SAAS,CAAC,eAAe,GAAG,GAAG,CAAC;QAChC,SAAS,CAAC,eAAe,GAAG,EAAE,CAAC;QAC/B,SAAS,CAAC,MAAM,GAAG,GAAG,CAAC;QACvB,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;QACvB,SAAS,CAAC,KAAK,GAAG,GAAG,CAAC;QAEtB,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAErB,4BAA4B;QAC5B,IAAI,WAAW,GAAG,SAAS,CAAC;QAC5B,IAAI,UAAU,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAClD,UAAU,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;QACpC,UAAU,CAAC,UAAU,GAAG,KAAK,CAAC;QAC9B,UAAU,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAChC,UAAU,CAAC,eAAe,GAAG,GAAG,CAAC;QACjC,UAAU,CAAC,eAAe,GAAG,EAAE,CAAC;QAChC,UAAU,CAAC,MAAM,GAAG,GAAG,CAAC;QACxB,UAAU,CAAC,QAAQ,GAAG,CAAC,CAAC;QACxB,UAAU,CAAC,KAAK,GAAG,GAAG,CAAC;QAEvB,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEtB,+BAA+B;QAC/B;;;;;;;;;;;iCAWyB;QACzB,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;QAE/C,WAAW;QACZ;;;;+BAIuB;QAEvB,IAAI,aAAa,GAAG,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;QAC9C,aAAa,CAAC,IAAI;QACd,cAAc;QACd,qCAAqC;QACrC,kCAAkC;QAClC,UAAS,OAAO;YACZ,IAAI,UAAU,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,SAAS,GAAG,IAAI,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC;YAC3F,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YAC5C,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACzB,CAAC,CACJ,CAAC;QAEF,4BAA4B;QAC5B,IAAI,QAAQ,GAAG,IAAI;YACf,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC,CAAC,gBAAgB;YAClD,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;YACnB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAC5B,CAAC,CAAA;QAED,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;QAChB,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YACvD,YAAY,CAAC,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YACzD,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;YACtD,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAE,CAAC,QAAQ,CAAE,UAAU,CAAC;YAClD,UAAU,GAAG,CAAC,CAAC;YACf,EAAE,CAAA,CAAC,CAAC,UAAU,CAAC,CAAA,CAAC;gBACZ,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;YAC1C,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YAC3C,CAAC;QAEL,CAAC,CAAC,CAAA;QAEF,sBAAsB;QACtB,cAAc,EAAE,CAAC;QACjB,OAAO,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;QAEvC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;QAC/C,QAAQ,EAAE,CAAC,CAAC,oBAAoB;IAEpC,CAAC,CAAA,4BAA4B;IAG7B,sBAAsB;IAEtB,eAAe;IACf,aAAa,GAAG,IAAI,CAAC;IACrB,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,CAAC,GAAG,EAAE,CAAC;IACX,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,KAAK,GAAG,KAAK,CAAC;IAClB,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,CAAC,GAAG,CAAC,CAAC;IAEV,eAAe,CAAQ,EAAE,CAAQ,EAAE,KAAY,EAAE,KAAY;QACxD,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;QAC5B,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;QAC5B,KAAK,IAAG,KAAK,CAAC;IACnB,CAAC;IAED,cAAc;IACd,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,MAAM,GAAG,MAAM,CAAC;IAEpB,UAAU;IACV,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,WAAW;IACX,IAAI,EAAE,GAAG,EAAE,CAAC;IACZ,IAAI,EAAE,GAAG,CAAC,CAAC;IACX,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAI,MAAM,GAAG,KAAK,CAAC;IAEnB,uBAAuB;IACvB;QAEI,KAAK,CAAC,MAAM,EAAE,CAAC;QACf,IAAI,KAAK,GAAW,KAAK,CAAC,QAAQ,EAAE,CAAC;QAErC,oCAAoC;QAEpC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,aAAa,CAAC;QAClC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAC/C,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;QAC3C,KAAK,IAAI,KAAK,CAAC;QAEf,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,IAAG,MAAM,CAAC;QAEhB,mCAAmC;QACnC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,CAAC;QAC5C,MAAM,IAAI,MAAM,CAAC;QAEjB,oCAAoC;QACpC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACjD,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAC,GAAG,CAAC,CAAC;QAC7C,MAAM,IAAI,MAAM,CAAC;QAEjB,iBAAiB,EAAE,CAAC;QAEpB,qCAAqC;QACrC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;QAChC,mBAAmB;QACnB,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IACnC,CAAC;IAED,yBAAyB;IACzB;QACI,QAAQ,GAAG,IAAI,QAAQ,CAAC,EAAC,SAAS,EAAC,KAAK,EAAE,KAAK,EAAC,IAAI,EAAC,CAAC,CAAC;QACvD,QAAQ,CAAC,aAAa,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;QACtC,kDAAkD;QAClD,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW,CAAC,CAAC;QACxD,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC;QACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,CAAC,CAAC;IACnD,CAAC;IAED,kCAAkC;IAClC;QACI,qEAAqE;QACrE,MAAM,GAAG,IAAI,iBAAiB,CAAC,EAAE,EAAE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QACtF,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;QACtB,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC;QACvB,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC;QAC1B,MAAM,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;IACjD,CAAC;IAED,IAAI,aAAa,GAAG,CAAC,CAAC,CAAC,+CAA+C;IACtE,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,IAAI,QAAQ,GAAG,IAAI,CAAC;IAEpB;QAEI,EAAE,CAAA,CAAC,UAAU,CAAC,CAAA,CAAC;YAEX,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;YAClD,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAC,GAAG,CAAC,CAAC;YAEvD,KAAK,IAAI,QAAQ,CAAC;QAWtB,CAAC;IACL,CAAC;IAED,mBAAmB;IACnB,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAE,YAAY,EAAE,UAAU,EAAE,KAAK,CAAE,CAAC;IAClE,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAE,gBAAgB,EAAE,UAAU,EAAE,KAAK,CAAE,CAAC,CAAC,UAAU;IAEjF,oBAAqB,CAAC;QAClB,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,UAAU,IAAI,WAAW,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACxE,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC;QAErB,IAAI,IAAI,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC3B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpD,MAAM,CAAC;QAEP,IAAI,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;QACtC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAGxC,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,iBAAiB;QAEjB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,GAAG,CAAC,CAAC,CAAC;QAC9C,kBAAkB;QAElB,IAAI,EAAE,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,IAAE,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC;QAClD,kBAAkB;QAElB,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,CAAC;YACpC,MAAM,CAAC;QAEX,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;QACZ,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC;IAChB,CAAC;IAED;QACI,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QACpB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QACjB,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;QAC7C,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;QACpC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;QACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;IAChD,CAAC;IAED,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC;IAErB,MAAM,CAAC;QACH,KAAK,EAAE,KAAK;KACf,CAAA;AAEL,CAAC,CAAC,EAAE,CAAC","file":"core/game.js","sourcesContent":["/** Source file name: game.ts */\n/** Author: Liyi Chen   */\n/** Last modified: Liyi Chen*/\n/** Date last Modified: Feb 26 2016 */\n/** Description: This project is buildt on the base of The temperate project that created by Professor \n *  Tom Tsiliopoulos who is teaching COMP392 - Advanced Graphic. \n *  The purpose of this project is simulating the Solar System's movement. \n *  The project is built on TypeScript, JavaScript, THREE.js and so on.\n *  Use the mousewhell to zoom in/ out the scene\n *  You can also use the control panel to change the ambient light color, move the camera horizontally \n *  and/or vertically. Or you can even turn on the moveCamera to move the camera automatically*/\n \n/// <reference path=\"_reference.ts\"/>\n\n// MAIN GAME FILE\n\n// THREEJS Aliases\nimport Scene = THREE.Scene;\nimport Renderer = THREE.WebGLRenderer;\nimport PerspectiveCamera = THREE.PerspectiveCamera;\nimport BoxGeometry = THREE.BoxGeometry;\nimport CubeGeometry = THREE.CubeGeometry;\nimport PlaneGeometry = THREE.PlaneGeometry;\nimport SphereGeometry = THREE.SphereGeometry;\nimport Geometry = THREE.Geometry;\nimport AxisHelper = THREE.AxisHelper;\nimport LambertMaterial = THREE.MeshLambertMaterial;\nimport MeshBasicMaterial = THREE.MeshBasicMaterial;\nimport Material = THREE.Material;\nimport Mesh = THREE.Mesh;\nimport Object3D = THREE.Object3D;\nimport SpotLight = THREE.SpotLight;\nimport PointLight = THREE.PointLight;\nimport HemisphereLight = THREE.HemisphereLight;\nimport AmbientLight = THREE.AmbientLight;\nimport Control = objects.Control;\nimport GUI = dat.GUI;\nimport Color = THREE.Color;\nimport Vector3 = THREE.Vector3;\nimport Face3 = THREE.Face3;\nimport Point = objects.Point;\nimport CScreen = config.Screen;\nimport Clock = THREE.Clock;\nimport FirstPersonControls = THREE.FirstPersonControls;\n\n//Custom Game Objects\nimport gameObject = objects.gameObject;\n\n// setup an IIFE structure (Immediately Invoked Function Expression)\nvar game = (() => {\n\n    var scene: Scene = new Scene();\n    var renderer: Renderer;\n    var camera: PerspectiveCamera;\n    var axes: AxisHelper;\n    var plane: Mesh;\n    var rotationSpeed; //earth rotation speed\n    var moveCamera;\n    \n    var sun: Mesh;\n    var earth:Mesh;\n    var moon:Mesh;\n    var mars:Mesh;\n    var venus:Mesh;\n    \n    var sunGeometry: SphereGeometry;\n    var sunMaterial: LambertMaterial;\n    \n    var earthGeometry: SphereGeometry;\n    var earthMaterial: LambertMaterial;\n    \n    var moonGeometry: SphereGeometry;\n    var moonMaterial: LambertMaterial;\n    \n    var marsGeometry: SphereGeometry;\n    var marsMaterial: LambertMaterial;\n    \n    var venusGeometry: SphereGeometry;\n    var venusMaterial: LambertMaterial;\n    \n    var ambientColor;\n    var ambientLight: AmbientLight;\n    var spotLight: SpotLight;\n    var hemiLight: HemisphereLight;\n    var speedControl: Control;\n    var gui: GUI;\n    var stats: Stats;\n    var step: number = 0;\n    var clock: Clock;\n    var firstPersonControls\n    var pointLightSun;\n    var pointLightFront;\n    var pointLightBack;\n    var pointLightLeft;\n    var pointLightRight;\n    var pointLightTop;\n    var pointLightButtom;\n    \n    function init() {\n        // Instantiate a new Scene object\n        //scene = new Scene();\n\n        // setup a THREE.JS Clock object\n        clock = new Clock();\n        setupRenderer(); // setup the default renderer\n        setupCamera(); // setup the camera\n\n        //Add a Plane to the Scene\n        //plane = new gameObject( new PlaneGeometry(20, 20, 1, 1), new LambertMaterial({ color: 0xf4a460 }),  0, 0, 0);\n        //plane.rotation.x = -0.5 * Math.PI;\n        //plane.name = \"ground\";\n        //scene.add(plane);\n        //console.log(\"Added Plane Primitive to scene...\");\n    \n        // Add a sun to the Scene\n        sunGeometry = new SphereGeometry(3, 32, 32);\n        sunMaterial = new LambertMaterial({ color: 0xFCD440, wireframe:false });\n        sun= new gameObject(sunGeometry, sunMaterial, 0, 0, 0);\n        sun.name = \"Sun\";\n        scene.add(sun);\n        console.log(\"Added sun Primitive to the scene\");\n    \n        // Add a earth to the Scene\n        earthGeometry = new SphereGeometry(1.5, 32, 32);\n        earthMaterial = new LambertMaterial({ color: 0x0000ff, wireframe:false });\n        earth= new gameObject(earthGeometry, earthMaterial, 15, 0, 0);\n        earth.name = \"Earth\";\n        scene.add(earth);\n        console.log(\"Added earth Primitive to the scene\");\n        \n        // Add a moon to the Scene\n        moonGeometry = new SphereGeometry(0.5, 32, 32);\n        moonMaterial = new LambertMaterial({ color: 0xeeeeee, wireframe:false });\n        moon= new gameObject(moonGeometry, moonMaterial, 12, 0, 0);\n        moon.name = \"Moon\";\n        scene.add(moon);\n        console.log(\"Added moon Primitive to the scene\");\n        \n        // Add a mars to the Scene\n        marsGeometry = new SphereGeometry(0.8, 32, 32);\n        marsMaterial = new LambertMaterial({ color: 0x913e11, wireframe:false });\n        mars= new gameObject(marsGeometry, marsMaterial, 18, 0, 0);\n        mars.name = \"Mars\";\n        scene.add(mars);\n        console.log(\"Added mars Primitive to the scene\");\n        \n        // Add a venus to the Scene\n        venusGeometry = new SphereGeometry(0.85, 32, 32);\n        venusMaterial = new LambertMaterial({ color: 0xf4a460, wireframe:false });\n        venus= new gameObject(venusGeometry, venusMaterial, 8, 0, 0);\n        venus.name = \"Mars\";\n        scene.add(venus);\n        console.log(\"Added venus Primitive to the scene\");\n        \n        // setup first person controls\n        /*firstPersonControls = new FirstPersonControls(sphere);\n        firstPersonControls.lookSpeed = 0.4;\n        firstPersonControls.movementSpeed = 10;\n        firstPersonControls.lookVertical = true;\n        firstPersonControls.constrainVertical = true;\n        firstPersonControls.verticalMin = 0;\n        firstPersonControls.verticalMax = 2.0;\n        firstPersonControls.lon = -150;\n        firstPersonControls.lat = 120;*/\n    \n    \n        // add an axis helper to the scene\n        axes = new AxisHelper(2);\n        earth.add(axes);\n        //sun.add(axes);\n        console.log(\"Added Axis Helper to scene...\");\n    \t\n        //point light - sun light\n        var pointColor = \"#ffffff\"; //white sun light\n        pointLightSun = new THREE.PointLight(pointColor);\n        pointLightSun.position.copy(sun.position);\n        pointLightSun.position.x += 0;\n        pointLightSun.position.y += 0;\n        pointLightSun.position.z -= 0;\n        pointLightSun.distance = 500;\n        scene.add(pointLightSun);\n        \n/*         \n        var pointColor = \"#ffffff\"; //white sun light\n        pointLightFront = new THREE.PointLight(pointColor);\n        pointLightFront.position.copy(sun.position);\n        pointLightFront.position.x += 0;\n        pointLightFront.position.y += 0;\n        pointLightFront.position.z -= 0;\n        pointLightFront.distance = 500;\n        scene.add(pointLightFront);\n        \n        //point light - back\n        pointLightBack = new THREE.PointLight(pointColor);\n        pointLightBack.position.copy(sun.position);\n        pointLightBack.position.x += 0;\n        pointLightBack.position.y += 0;\n        pointLightBack.position.z += 8;\n        pointLightBack.distance = 500;\n        scene.add(pointLightBack);\n        \n        //point light - left\n        pointLightLeft = new THREE.PointLight(pointColor);\n        pointLightLeft.position.copy(sun.position);\n        pointLightLeft.position.x += 8;\n        pointLightLeft.position.y += 0;\n        pointLightLeft.position.z -= 0;\n        pointLightLeft.distance = 500;\n        scene.add(pointLightLeft);\n       \n       //point light - right\n        pointLightRight = new THREE.PointLight(pointColor);\n        pointLightRight.position.copy(sun.position);\n        pointLightRight.position.x -= 8;\n        pointLightRight.position.y += 0;\n        pointLightRight.position.z -= 0;\n        pointLightRight.distance = 500;\n        scene.add(pointLightRight);\n        \n        //point light - top\n        pointLightTop = new THREE.PointLight(pointColor);\n        pointLightTop.position.copy(sun.position);\n        pointLightTop.position.x -= 0;\n        pointLightTop.position.y += 8;\n        pointLightTop.position.z -= 0;\n        pointLightTop.distance = 500;\n        scene.add(pointLightTop);\n        \n        //point light buttom\n        pointLightButtom = new THREE.PointLight(pointColor);\n        pointLightButtom.position.copy(sun.position);\n        pointLightButtom.position.x -= 0;\n        pointLightButtom.position.y -= 8;\n        pointLightButtom.position.z -= 0;\n        pointLightButtom.distance = 500;\n        scene.add(pointLightButtom);\n*/       \n        // Add an AmbientLight to the scene\n        ambientColor = \"#222222\"\n        ambientLight = new AmbientLight(ambientColor);\n        scene.add(ambientLight);\n        console.log(\"Added an Ambient Light to Scene\");\n        \n        //spotlight point to the sun\n        var pointColor = \"#b15151\";\n        var spotLight = new THREE.SpotLight(pointColor);\n        spotLight.position.set(0, 20, -30);\n        spotLight.castShadow = false;\n        spotLight.shadowCameraNear = 2;\n        spotLight.shadowCameraFar = 200;\n        spotLight.shadowCameraFov = 30;\n        spotLight.target = sun;\n        spotLight.distance = 0;\n        spotLight.angle = 0.4;\n\n        scene.add(spotLight);\n        \n        //spotlight point to the sun\n        var pointColor2 = \"#ffffff\";\n        var spotLight2 = new THREE.SpotLight(pointColor2);\n        spotLight2.position.set(0, 20, -30);\n        spotLight2.castShadow = false;\n        spotLight2.shadowCameraNear = 2;\n        spotLight2.shadowCameraFar = 200;\n        spotLight2.shadowCameraFov = 30;\n        spotLight2.target = sun;\n        spotLight2.distance = 0;\n        spotLight2.angle = 0.4;\n\n        scene.add(spotLight2);\n        \n        // Add a SpotLight to the scene\n        /*spotLight = new SpotLight(0xffffff);\n        //spotLight.position.set(5.6, 23.1, 5.4);\n        spotLight.position.set(0, 7.5, -10);\n        spotLight.rotation.set(-0.8, 42.7, 19.5);\n        spotLight.intensity = 2;\n        spotLight.angle = 60 * (Math.PI / 180);\n        spotLight.distance = 200;\n        spotLight.castShadow = true;\n        spotLight.shadowCameraNear = 1;\n        spotLight.shadowMapHeight = 2048;\n        spotLight.shadowMapWidth = 2048;\n        //scene.add(spotLight);*/\n        console.log(\"Added a SpotLight Light to Scene\");\n    \n         //lensflare\n        /*var textureFlare0 = THREE.ImageUtils.loadTexture(\"../../textures/lensflare0.png\");\n        var flareColor = new THREE.Color(0xffaacc);\n        var lensFlare = new THREE.LensFlare(textureFlare0, 350, 0.0, THREE.AdditiveBlending, flareColor);\n        lensFlare.position.copy(spotLight.position);\n        scene.add(lensFlare);*/\n        \n        var textureFlare1 = new THREE.TextureLoader();\n        textureFlare1.load(\n            //resource URL\n            \"../../textures/lensflare0_alpha.png\",\n            //get the texture and deal with it\n            function(texture){\n                var flareColor = new THREE.Color(0xffaacc);\n                var lensFlare = new THREE.LensFlare(texture, 350, 0.0, THREE.AdditiveBlending, flareColor);\n                lensFlare.position.copy(spotLight.position);\n                scene.add(lensFlare);\n            }\n        );\n        \n        //Add controls on the screen\n        var controls = new function(){\n            this.ambientColor = ambientColor; //default color \n            this.horizontal = 0.6;\n            this.vertical = 16;\n            this.moveCamera = false;\n        }\n        \n        gui = new GUI();\n        gui.addColor(controls, 'ambientColor').onChange(function (e){\n            ambientLight.color = new THREE.Color(e);\n        });\n        \n        gui.add(controls, 'horizontal', -10, 10).onChange(function (e) {\n            camera.position.x = e;\n        });\n        \n        gui.add(controls, 'vertical', 11, 21).onChange(function (e) {\n            camera.position.y = e;\n        });\n        \n        gui.add(controls, 'moveCamera' ).onChange( function (e){\n            moveCamera = e;\n            if(!moveCamera){\n                console.log(\"stop moving the camera\");\n            }else{\n                console.log(\"start moving the camera\");\n            }\n            \n        })\n                \n        // Add framerate stats\n        addStatsObject();\n        console.log(\"Added Stats to scene...\");\n\n        document.body.appendChild(renderer.domElement);\n        gameLoop(); // render the scene\t\n\n    }//the end of init() function\n\n\n    /**Global variable  */\n    \n    //for the earth\n    rotationSpeed = 0.05;\n    var a = 15;\n    var b = 13;\n    var alpha = 0;\n    var speed = 0.001;\n    var x = 0;\n    var y = 0;\n    \n    function orbit(a:number, b:number, alpha:number, speed:number){\n         x = a * Math.cos(alpha%360);\n         y = b * Math.sin(alpha%360);\n         alpha +=speed;\n    }\n    \n    //for the moon\n    var r = 3;\n    var alpha2 = 0;\n    var speed2 = 0.0365;\n    \n    //for mars\n    var a3 = 18;\n    var b3 = 16;\n    var alpha3 = 0;\n    var speed3 = 0.003;\n    \n    //for venus\n    var a4 = 10;\n    var b4 = 8;\n    var alpha4 = 0;\n    var speed4 = 0.002;\n    \n    // Setup main game loop\n    function gameLoop(): void {\n        \n        stats.update();\n        var delta: number = clock.getDelta();\n        \n        //firstPersonControls.update(delta);\n        \n        earth.rotation.y += rotationSpeed;\n        earth.position.x = a * Math.cos(alpha%360) - 3;\n        earth.position.z = b * Math.sin(alpha%360);\n        alpha += speed;\n\n        moon.position.copy(earth.position);\n        moon.position.x += r * Math.cos(alpha2%360);\n        moon.position.z += r * Math.sin(alpha2%360);\n        alpha2 +=speed2;\n        \n        //mars.rotation.y += rotationSpeed;\n        mars.position.x = a3 * Math.cos(alpha3%360) - 3;\n        mars.position.z = b3 * Math.sin(alpha3%360);\n        alpha3 += speed3;\n        \n        //venus.rotation.y += rotationSpeed;\n        venus.position.x = a4 * Math.cos(alpha4%360) - 3;\n        venus.position.z = b4 * Math.sin(alpha4%360);\n        alpha4 += speed4;\n        \n        moveCameracontrol();\n    \n        // render using requestAnimationFrame\n        requestAnimationFrame(gameLoop);\n        // render the scene\n        renderer.render(scene, camera);\n    }\n\n    // Setup default renderer\n    function setupRenderer(): void {\n        renderer = new Renderer({antialias:false, alpha:true});\n        renderer.setClearColor(0x000000, 1.0);\n        //renderer.setSize(CScreen.WIDTH, CScreen.HEIGHT);\n        renderer.setSize(window.innerWidth, window.innerHeight);\n        renderer.shadowMap.enabled = false;\n        console.log(\"Finished setting up Renderer...\");\n    }\n\n    // Setup main camera for the scene\n    function setupCamera(): void {\n        //camera = new PerspectiveCamera(45, config.Screen.RATIO, 0.1, 1000);\n        camera = new PerspectiveCamera(45, window.innerWidth / window.innerHeight, 0.1, 1000);\n        camera.position.x = 0;\n        camera.position.y = 16;\n        camera.position.z = -20.5;\n        camera.lookAt(new Vector3(0, 0, 0));\n        console.log(\"Finished setting up Camera...\");\n    }\n    \n    var moveDirection = 1; //move to left when > 0; move to right when < 0\n    var rCamera = 3;\n    var delta = 0;\n    var moveStep = 0.01;\n    \n    function moveCameracontrol(): void {\n        \n        if(moveCamera){\n            \n            camera.position.x = rCamera * Math.cos(delta%360);\n            camera.position.y = 16 + rCamera * Math.sin(delta%360);\n           \n            delta += moveStep;\n            \n            /*if(moveDirection > 0){\n                camera.position.x += moveStep;\n                if(camera.position.x > 10 )\n                    moveDirection = - moveDirection;\n            }else {\n                camera.position.x -= moveStep;\n                if(camera.position.x < - 10)\n                    moveDirection = - moveDirection;\n            }*/\n        }\n    }\n    \n    //Zoom in/out scene\n    document.body.addEventListener( 'mousewheel', mousewheel, false );\n    document.body.addEventListener( 'DOMMouseScroll', mousewheel, false ); // firefox\n\n    function mousewheel( e ) {      \n        var d = ((typeof e.wheelDelta != \"undefined\")?(-e.wheelDelta):e.detail);\n        d = 5 * ((d>0)?1:-1);\n\n        var cPos = camera.position;\n        if (isNaN(cPos.x) || isNaN(cPos.y) || isNaN(cPos.y))\n        return;\n\n        var r = cPos.x*cPos.x + cPos.y*cPos.y;\n        var sqr = Math.sqrt(r);\n        var sqrZ = Math.sqrt(cPos.z*cPos.z + r);\n\n\n        var nx = cPos.x + ((r==0)?0:(d * cPos.x/sqr));\n        //var nx = cPos.x\n        \n        var ny = cPos.y + ((r==0)?0:(d * cPos.y/sqr));\n        //var ny = cPos.y;\n        \n        var nz = cPos.z + ((sqrZ==0)?0:(d * cPos.z/sqrZ));\n        //var nz = cPos.z;\n        \n        if (isNaN(nx) || isNaN(ny) || isNaN(nz))\n            return;\n\n        cPos.x = nx;\n        cPos.y = ny;\n        cPos.z = nz;\n    }\n\n    function addStatsObject() {\n        stats = new Stats();\n        stats.setMode(0);\n        stats.domElement.style.position = 'absolute';\n        stats.domElement.style.left = '0px';\n        stats.domElement.style.top = '0px';\n        document.body.appendChild(stats.domElement);\n    }\n    \n    window.onload = init;\n\n    return {\n        scene: scene\n    }\n\n})();\n\n"],"sourceRoot":"/source/"}